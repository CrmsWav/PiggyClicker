{"version":3,"sources":["components/piggyButton.js","components/upgrades.js","App.js","index.js"],"names":["ClickButton","props","onClickFunction","onButtonClick","id","className","src","alt","onClick","Upgrades","score","upgrades","upgradesList","map","upgrade","index","onBuy","disabled","cost","name","App","React","useState","setScore","scorePerSecond","setScorePerSecond","setUpgrades","scoreRef","useRef","current","scorePerSecondRef","useEffect","setInterval","updatedUpgrades","upgradeCost","updatedUpgrade","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAIO,SAASA,EAAYC,GAC1B,IAAMC,EAAkBD,EAAME,cAC9B,OAAO,qBAAKC,GAAG,SAAR,SACL,qBACAC,UAAU,cACVC,IAPkB,2BAQlBC,IAAI,iBACJC,QAASN,MCTN,SAASO,EAASR,GACvB,IAAMS,EAAQT,EAAMS,MACdC,EAAWV,EAAMW,aAEvB,OACE,8BACGD,EAASE,KAAI,SAACC,EAASC,GAAV,OACZ,qBAEAX,GAAG,SAFH,SAIE,yBACAI,QAAS,kBAAMP,EAAMe,MAAMD,IAC3BE,SAAUH,EAAQI,KAAOR,EACzBN,GAAG,QAHH,UAIGU,EAAQK,KAAO,KAChB,uBACCL,EAAQI,KAAO,IAChB,qBAAKZ,IAAI,oBAAoBC,IAAI,aAVhCQ,QCkGEK,MAvGf,WACE,MAA0BC,IAAMC,SAAS,GAAzC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAA4CF,IAAMC,SAAS,GAA3D,mBAAOE,EAAP,KAAuBC,EAAvB,KAEA,EAAgCJ,IAAMC,SAAS,CAC7C,CACEH,KAAM,QACNK,eAAgB,EAChBN,KAAM,GAER,CACEC,KAAM,aACNK,eAAgB,GAChBN,KAAM,MATV,mBAAOP,EAAP,KAAiBe,EAAjB,KAaMC,EAAWN,IAAMO,SACvBD,EAASE,QAAUnB,EACnB,IAAMoB,EAAoBT,IAAMO,SAmBhC,OAlBAE,EAAkBD,QAAUL,EAE5BH,IAAMU,WAAU,WACdC,aAAY,WAOVT,EAASI,EAASE,QAAUC,EAAkBD,WAC7C,OACF,IAOD,qBAAKxB,UAAU,MAAf,SACE,iCACE,iCACE,iDAEF,qBAAKA,UAAU,YAAf,SACE,iCACE,sBAAKD,GAAG,OAAR,UACE,+CACe,uBACZM,EAFH,IAEU,qBAAKJ,IAAI,oBAAoBC,IAAI,YAE3C,gDACgB,uBADhB,KACyBiB,EAAgB,IACvC,qBAAKlB,IAAI,oBAAoBC,IAAI,SAFnC,eAKD,cAACP,EAAD,CAAaG,cAtBxB,WACEoB,EAASb,EAAQ,MAuBP,cAACD,EAAD,CACEC,MAAOA,EACPE,aAAcD,EACdK,MAoBd,SAAoBD,GAElB,IAAMkB,EAAe,YAAOtB,GAGtBuB,EAAcD,EAAgBlB,GAAOG,KAC3CK,EAASb,EAAQwB,GAGjBT,EAAkBD,EAAiBS,EAAgBlB,GAAOS,gBAK1D,IAAMW,EAAc,eAAQF,EAAgBlB,IAC5CoB,EAAejB,KAAOkB,KAAKC,MAA4B,IAAtBF,EAAejB,MAEhDe,EAAgBlB,GAASoB,EACzBT,EAAYO,WAjCR,iCACE,oDCpEVK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41decc9e.chunk.js","sourcesContent":["import React from 'react';\n\nconst piggyImageUrl = \"images/piggy_clicker.png\";\n\nexport function ClickButton(props) {\n  const onClickFunction = props.onButtonClick;\n  return <div id=\"button\">\n    <img\n    className=\"ClickButton\"\n    src={piggyImageUrl}\n    alt=\"piggy to click\"\n    onClick={onClickFunction}\n    />\n  </div>\n}","import React from 'react';\n\nexport function Upgrades(props) {\n  const score = props.score;\n  const upgrades = props.upgradesList;\n\n  return (\n    <div>\n      {upgrades.map((upgrade, index) => (\n        <div\n        key={index}\n        id=\"boosts\"\n        >\n          <button\n          onClick={() => props.onBuy(index)}\n          disabled={upgrade.cost > score}\n          id=\"boost\">\n            {upgrade.name + \" :\"}\n            <br/>\n            {upgrade.cost + \" \"}\n            <img src=\"images/dollar.png\" alt=\"coin\"></img>\n          </button>\n        </div>\n      ))}\n    </div>\n  )\n}","import \"./App.css\";\nimport { ClickButton } from \"./components/piggyButton\";\nimport { Upgrades } from \"./components/upgrades\";\nimport React from \"react\";\n\nfunction App() {\n  const [score, setScore] = React.useState(0);\n  const [scorePerSecond, setScorePerSecond] = React.useState(0);\n\n  const [upgrades, setUpgrades] = React.useState([\n    {\n      name: \"Boost\",\n      scorePerSecond: 1,\n      cost: 1,\n    },\n    {\n      name: \"SuperBoost\",\n      scorePerSecond: 10,\n      cost: 10,\n    },\n  ]);\n\n  const scoreRef = React.useRef();\n  scoreRef.current = score;\n  const scorePerSecondRef = React.useRef();\n  scorePerSecondRef.current = scorePerSecond;\n\n  React.useEffect(() => {\n    setInterval(() => {\n      // console.log(score);\n      // console.log(scorePerSecond);\n\n      // console.log(\"Ref\");\n      // console.log(scoreRef);\n      // console.log(scoreRef.current);\n      setScore(scoreRef.current + scorePerSecondRef.current);\n    }, 1000);\n  }, []);\n\n  function incrementScore() {\n    setScore(score + 1);\n  }\n\n  return (\n    <div className=\"app\">\n      <body>\n        <header>\n          <h1>Piggy Clicker</h1>\n        </header>\n        <div className=\"container\">\n          <main>\n            <div id=\"myH2\">\n              <h2>\n                Piggy Score :<br />\n                {score} <img src=\"images/dollar.png\" alt=\"coin\"></img>\n              </h2>\n              <h2>\n                Piggy Boosts :<br />+ {scorePerSecond}{\" \"}\n                <img src=\"images/dollar.png\" alt=\"coin\"></img> / SEC\n              </h2>\n            </div>\n            {<ClickButton onButtonClick={incrementScore} />}\n            {\n              <Upgrades\n                score={score}\n                upgradesList={upgrades}\n                onBuy={buyUpgrade}\n              />\n            }\n          </main>\n        </div>\n        <footer>\n          <p>By Crms.wav</p>\n        </footer>\n      </body>\n    </div>\n  );\n\n  /**\n   * Cette fonction va :\n   * - Modifier le state des upgrades pour augmenter le coût de l'upgrade achetée\n   * - Ajouter le scorePerSecond de l'upgarde achetée au SPS total\n   * - Retirer le coût de l'upgrade au score du joueur\n   *\n   * @param index Nombre entier qui représente la position de l'amélioration dans le tableau\n   */\n  function buyUpgrade(index) {\n    // Cloner upgrades\n    const updatedUpgrades = [...upgrades];\n\n    // Retirer le coût de l'upgrade à notre score pour \"payer\"\n    const upgradeCost = updatedUpgrades[index].cost;\n    setScore(score - upgradeCost);\n\n    // Ajouter le score par seconde pour augmenter le compteur\n    setScorePerSecond(scorePerSecond + updatedUpgrades[index].scorePerSecond);\n\n    // Mettre à jour le coût de l'amélioration\n\n    // Cloner l'upgrade mise à jour\n    const updatedUpgrade = { ...updatedUpgrades[index] };\n    updatedUpgrade.cost = Math.round(updatedUpgrade.cost * 1.5);\n\n    updatedUpgrades[index] = updatedUpgrade;\n    setUpgrades(updatedUpgrades);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}